# Шифр Цезаря | Написать программный модуль, позволяющий для заданной шифрограммы 
# в виде текста или в виде набора целых чисел (оцифрованного сообщения) перебрать 
# все ключи и «взломать» этот шифр.
import caesar

alpha = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
mydict = {
    '00000':'а',
    '00001':'б',
    '00010':'в',
    '00011':'г',
    '00100':'д',
    '00101':'е',
    '00110':'ж',
    '00111':'з',
    '01000':'и',
    '01001':'й',
    '01010':'к',
    '01011':'л',
    '01100':'м',
    '01101':'н',
    '01110':'о',
    '01111':'п',
    '10000':'р',
    '10001':'с',
    '10010':'т',
    '10011':'у',
    '10100':'ф',
    '10101':'х',
    '10110':'ц',
    '10111':'ч',
    '11000':'ш',
    '11001':'щ',
    '11101':'э',
    '11110':'ю',
    '11111':'я',
    '11010':'ъ',
    '11100':'ь',
    '11011': 'ы',
    }

def bin(dec):
    bin = ''
    while dec > 0:
        bin = str(dec % 2) + bin
        dec = dec // 2
    return bin

cypher = '143122273862236'.split(',')
mas_cypher = [int(x) for x in cypher]
el = 0
result_str = ""

while el < len(cypher):
    a = int(mas_cypher[el])
    dec_num = bin(a)
    if len(dec_num)==60:
        pass
    else:
        #dec_num=dec_num.zfill(60)      #   кодирование
        dec_num=dec_num.rjust(60,'0')   #   декодирование

    result = [dec_num[i:i+5] for i in range(0, len(dec_num),5)]

    for i in result:
        result_str += mydict[i]
    el+=1

key=0
while key<len(alpha):
    caesar.decrypt(result_str,key)
    key+=1